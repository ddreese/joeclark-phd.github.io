<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>JoeClark-PhD.github.io</title><link href="http://joeclark-phd.github.io/" rel="alternate"></link><link href="http://joeclark-phd.github.io/feeds/joseph-clark.atom.xml" rel="self"></link><id>http://joeclark-phd.github.io/</id><updated>2014-08-04T00:00:00-07:00</updated><entry><title>Programming as a Trade</title><link href="http://joeclark-phd.github.io/programming-as-a-trade.html" rel="alternate"></link><updated>2014-08-04T00:00:00-07:00</updated><author><name>Joseph Clark</name></author><id>tag:joeclark-phd.github.io,2014-08-04:programming-as-a-trade.html</id><summary type="html">&lt;p&gt;Today's &lt;em&gt;Wall Street Journal&lt;/em&gt; features a column by Christopher Mims that argues "&lt;a href="http://t.co/eYjOwbLGEq"&gt;Programming Is a Trade; Let's Act Like It&lt;/a&gt;". He argues that not only is it possible to learn programming without going to college, but that university computer science programs may be teaching something entirely different from what's used in practice:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Take Facebook: The first thing that happens to a new engineer there is six weeks of intensive classes, many of which are -- you guessed it -- programming classes. This is in part becuase university courses in computer science favor theory over programming, which is a mishmash of skills ranging from practical knowledge of in-vogue programming languages to how to work on projects that involve dozens of other programmers and thousand or even millions of lines of code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Mims is primarily interested in writing about online training programs like &lt;a href="http://codecademy.com"&gt;Codecademy&lt;/a&gt; and &lt;a href="http://teamtreehouse.com"&gt;Treehouse&lt;/a&gt;, as well as a few "intensive" trade schools like Seattle's &lt;a href="http://codefellows.org"&gt;Code Fellows&lt;/a&gt;. I'd like to raise the possibility that this article highlights an excellent way for MIS programs (like ours at ASU) to make our programs relevant for students.&lt;/p&gt;
&lt;p&gt;In CIS440, which started out as a textbook-driven project management (PMBOK-based) course, my students are now experimenting with a wide variety of practices in that "mishmash" -- version control, test-driven development, DevOps, and so on. Last spring, we started using Scrum as an organizing framework for the course schedule, with its strict requirement that the team &lt;em&gt;deliver working software&lt;/em&gt; early in the semester and demonstrate new features every iteration (every two weeks, starting this fall).&lt;/p&gt;
&lt;p&gt;Aside: my initial motivation in adopting Scrum was to protect my own pride! I hated telling capstone project sponsors at the end of the semester, "The students didn't finish your project, but..." [choose one of: "...they had a great learning experience", "...they did a non-working prototype", "...you can consider this an experiment with the new technology", etc]. Scrum mandates that you'll have &lt;em&gt;something&lt;/em&gt; deliverable, even if it's a bare-bones web page with lots of "coming soon" stub pages.&lt;/p&gt;
&lt;p&gt;It turns out that there's more to the "mishmash" than just learning a programming language or a few tools. There is indeed &lt;em&gt;theory&lt;/em&gt; about software development -- it just doesn't happen to be the kind of theory (data structures, algorithms, etc) that they teach in the computer science department. "Agile" and "Lean" are two keywords that both stand in place of a rich history of theoretical study and empirical experience. We can look at collaborative software development itself as a scientific process in which requirements are seen as hypotheses to be tested (cf. &lt;i&gt;&lt;a href="http://www.amazon.com/gp/product/0307887898/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0307887898&amp;amp;linkCode=as2&amp;amp;tag=joeclanet-20&amp;amp;linkId=LB5CR3DGE2PQK5YO"&gt;The Lean Startup&lt;/a&gt;&lt;/i&gt;). And in fact there is a great deal of operations management, especially the Theory of Constraints, underlying much of the DevOps movement.&lt;/p&gt;
&lt;p&gt;The gap between what CS departments teach and what the market needs is real. CS graduates may study programming theory for four years and graduate without ever having written a test, or checked code in with &lt;code&gt;git&lt;/code&gt;. But there's more to being a great developer than just learning the currently most popular language. Teaching the art and science of software development in organizations can and should be (part of?) the mandate of an MIS department. By claiming this role, we can offer more than just "computer science lite". We can even begin to justify why &lt;em&gt;computer science majors&lt;/em&gt; should take courses or a double major in our departments. We'll offer something that complements, rather than substitutes for, their training in computing theory.&lt;/p&gt;
&lt;p&gt;This is going to be one of the guiding ideas of my courses in 2014-2015. To accomplish it, we're going to need some new practices (such as using GitHub for assignments) and new resources (like a great textbook!) as well as lots of communication with the professional community (and maybe with the CS department) to better understand what's really needed.&lt;/p&gt;</summary><category term="teaching"></category><category term="cis440"></category><category term="software"></category></entry><entry><title>Seeking Capstone Projects For ASU CIS Students</title><link href="http://joeclark-phd.github.io/seeking-capstone-projects.html" rel="alternate"></link><updated>2014-07-26T00:00:00-07:00</updated><author><name>Joseph Clark</name></author><id>tag:joeclark-phd.github.io,2014-07-26:seeking-capstone-projects.html</id><summary type="html">&lt;p&gt;Once again I'm looking for capstone projects for senior students in the CIS undergraduate program at ASU. Students will be working in teams of 4-6 over a 15 week period and will be expected to use all of the knowledge they've gained throughout their undergraduate studies as well as learn new tools to fit the job. Past projects have included from-scratch web applications, mobile web sites and basic mobile apps, new features for existing web apps, data analysis, requirements analyses, and digital marketing projects involving SEO, social media, etc.&lt;/p&gt;
&lt;p&gt;Past clients have included brand-new startups (even a lone founder with nothing more than paper sketches of his intended web app), small, medium, and large companies. Clients are expected to maintain communication with the students, who will present several working "demos" of the project as it emerges, and will need your feedback. Beyond that, there is no cost to participate, although I will expect you to fill out a questionnaire at the end of the semester to help me grade the students.  This is a great opportunity for you to get a real project completed, to get to know some students who may be potential hires, and to give back to the ASU community.&lt;/p&gt;
&lt;p&gt;In my opinion the most successful projects have been "from scratch" web development projects, because the students have training in web development already, and with new projects they won't face a big up-front hurdle of trying to understand someone's existing code. However, with the big group coming into the class this fall, it's usually possible to find enough students to take on other types of challenges such as mobile app programming or big data analytics.&lt;/p&gt;
&lt;p&gt;If you are interested in sponsoring a project for the semester that spans August 21 to December 5, please &lt;a href="mailto:joseph.w.clark@asu.edu"&gt;e-mail me&lt;/a&gt; or call 480-965-0024 during the business day, and I'll tell you all about it.&lt;/p&gt;</summary><category term="cis440"></category></entry><entry><title>Jumping Back into Web Dev with Flask &amp; Heroku</title><link href="http://joeclark-phd.github.io/jumping-back-into-web-dev.html" rel="alternate"></link><updated>2014-07-25T00:00:00-07:00</updated><author><name>Joseph Clark</name></author><id>tag:joeclark-phd.github.io,2014-07-25:jumping-back-into-web-dev.html</id><summary type="html">&lt;p&gt;It's now just about 13 years since I've been able to call myself a "professional" web developer, and I found out that my trusty old IDE, &lt;a href="http://en.wikipedia.org/wiki/Macromedia_HomeSite"&gt;Allaire Homesite&lt;/a&gt;, is no longer on the market.  I'm thinking about &lt;a href="https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/guide-en.org"&gt;trying &lt;code&gt;emacs&lt;/code&gt;&lt;/a&gt;... it's older than me, and still popular, so there's got to be something to it.  But what about the back-end?  I've always just used an FTP tool to dump script files (PHP and the like) into a traditional web host -- this site runs on GoDaddy hosting -- but nowadays I'm playing around with web frameworks like &lt;a href="http://flask.pocoo.org"&gt;Flask&lt;/a&gt; and will need to have a lot more control over my environment.  The name of the game these days is &lt;a href="http://www.amazon.com/gp/product/1449319777/ref=as_li_tl?ie=UTF8&amp;amp;amp;camp=1789&amp;amp;amp;creative=390957&amp;amp;amp;creativeASIN=1449319777&amp;amp;amp;linkCode=as2&amp;amp;amp;tag=joeclanet-20&amp;amp;amp;linkId=PCAHAY6T3ZUYZQFK"&gt;the cloud&lt;/a&gt; (aka platform-as-a-service), where you architect applications in loosely-coupled modules running in configurable virtual machines.  I've decided to try &lt;a href="https://www.heroku.com/home"&gt;Heroku&lt;/a&gt;, because it has multiple &lt;a href="https://www.python.org"&gt;Python&lt;/a&gt; tutorials including &lt;a href="&amp;quot;https://devcenter.heroku.com/articles/getting-started-with-python"&gt;one based on Flask&lt;/a&gt;, my framework of choice, and gives you an apparently free &lt;a href="http://www.postgresql.org"&gt;PostgreSQL&lt;/a&gt; database.  If I can get it running, my first challenge is going to be building myself a fresh new blog.  This site is built in WordPress, which is a powerful and easy-to-use tool, but it has way more features than I need, and I need a learning project anyway.  Whether I can get it running is indeed the question.  I can run &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;virtualenv&lt;/code&gt;, and &lt;code&gt;git&lt;/code&gt; with no problems on my Windows machine, but can't get the command-line Heroku tools (&lt;code&gt;heroku&lt;/code&gt; and &lt;code&gt;foreman&lt;/code&gt;) to work at all.  I'm going to try setting up a new Arch Linux virtual machine with VMware Player and use that for development.&lt;/p&gt;
&lt;p&gt;St. Isidore of Seville, pray for me!  (He's the &lt;a href="http://catholicism.org/patron-saint-for-the-internet-isidore-of-seville.html"&gt;patron saint of the Internet&lt;/a&gt;.)&lt;/p&gt;</summary><category term="cloud"></category><category term="devOps"></category><category term="webdev"></category></entry><entry><title>DevOps and Testing in CIS440</title><link href="http://joeclark-phd.github.io/devops-and-testing-in-cis-440.html" rel="alternate"></link><updated>2014-07-24T00:00:00-07:00</updated><author><name>Joseph Clark</name></author><id>tag:joeclark-phd.github.io,2014-07-24:devops-and-testing-in-cis-440.html</id><summary type="html">&lt;p&gt;The summer cohort of CIS440 is rolling along with five teams building web apps from scratch for businesses in the area, including a couple of brand new startups.  It's exciting to do this all in the short span of six weeks, and it's been a very high-energy group.  I suspect the fact that the teams are meeting daily instead of twice per week is helping with keep the momentum up.&lt;/p&gt;
&lt;p&gt;This week the focus of my lectures has been on DevOps and on Testing, two concepts that I think are essential to software development but have never been included before in this course (which was originally more of a Project Management course).  In talking to professionals throughout the Valley, it has frequently come up that new graduates may have a lot of knowledge in &lt;em&gt;programming&lt;/em&gt;, but never have any training in software testing or even basic tools for collaboration such as version control.&lt;/p&gt;
&lt;p&gt;So, how should it be included in a course like this one?  This semester, I gave a basic lecture on a number of common DevOps approaches, without getting into specific tools, basing the lecture mainly on Paul Swartout's &lt;i&gt;&lt;a href="http://amzn.to/UvTAJV"&gt;Continuous Delivery and DevOps: A Quickstart Guide&lt;/a&gt;&lt;/i&gt;.  Testing is an area I know even less about, so I ended up showing &lt;a href="http://www.youtube.com/watch?v=ukm64IUANwE"&gt;a video by Carl Meyer&lt;/a&gt; and recommending &lt;a href="http://www.youtube.com/watch?v=ILkT_HV9DVU"&gt;another one by James Bach&lt;/a&gt;.  In addition, one assignment each student must do is participate in a "tech talk" for the class.  One group is presenting on a Git/Github workflow tomorrow, and another will present on some type of automated test runner next week.  (The "tech talk" idea has been a stroke of genius, by the way.  It allows the students to specialize and go beyond the core content of the course, while guaranteeing that I learn something new from each class.)&lt;/p&gt;
&lt;p&gt;But I think that in the future I might be able to impart a lot more by doing something like creating a "DevOps" workflow for the whole class: have students turn in assignments via Git, grade team members somehow based on the repo's statistics (# of commits, or whatever), require testing from the beginning, maybe even define tests of my own which students will have to make their projects pass in order to get credit.  Hey... maybe I can get a student team next semester to work on this for me!&lt;/p&gt;</summary><category term="teaching"></category><category term="cis440"></category><category term="devOps"></category><category term="testing"></category></entry><entry><title>CIS 365 De-brief</title><link href="http://joeclark-phd.github.io/cis-365-debrief.html" rel="alternate"></link><updated>2014-07-16T00:00:00-07:00</updated><author><name>Joseph Clark</name></author><id>tag:joeclark-phd.github.io,2014-07-16:cis-365-debrief.html</id><summary type="html">&lt;p&gt;Teaching a short six-week session of CIS 365 with a small group (9 students) was a great opportunity to try out some new things in the curriculum including (as mentioned) the use of an open-source DBMS, PostgreSQL, for teaching.  Here's some of what I discovered from the experience:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BYOD with an open source DBMS works.&lt;/strong&gt;  Postgres works just about the same on Macs and PCs, so there were no complications in letting the students use their own machines, but one:  I couldn't figure out how to set a PATH in the Mac OS, so it was challenging for Mac users to use the command-line features of &lt;code&gt;psql&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Adding a final "tech talk" assignment was a great way to focus the schedule on the DBMS.&lt;/strong&gt;  Previously I'd held a day on using Access and Excel as database front-ends, a day on Tableau, a day on database-driven websites with PHP, and maybe some other special topics.  This cluttered the schedule and distracted the students.  For the summer semester, instead, I spent more time on advanced features like stored procedures, triggers, and fuzzy-text queries, and I assigned each team to prepare a tech talk for the class on one of those other technologies which might be used for the front-end of a database application.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Group projects are still hard to grade fairly.&lt;/strong&gt;  From the professor's point of view, it's hard to tell who's doing the work and why.  Next time, I'll keep the projects but probably make them a smaller part of the overall grading.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the coming year instead of CIS 365 I'll be teaching CIS 355, a course on data warehousing in our new Business Data Analytics major.  It should be a good course for me to leverage what I've learned about teaching SQL and RDBMSs, and explore a new application of those technologies.&lt;/p&gt;</summary><category term="teaching"></category><category term="cis365"></category></entry><entry><title>Summer Session of CIS 365 About to Start</title><link href="http://joeclark-phd.github.io/summer-session-of-cis-365.html" rel="alternate"></link><updated>2014-05-14T00:00:00-07:00</updated><author><name>Joseph Clark</name></author><id>tag:joeclark-phd.github.io,2014-05-14:summer-session-of-cis-365.html</id><summary type="html">&lt;p&gt;The spring semester has just concluded and I'm proud to have finished my first year as an ASU faculty member.  After a short breather, the summer session will be starting, and I'm going to be teaching CIS365 again from May 19 to June 27.&lt;/p&gt;
&lt;p&gt;This semester, instead of using Microsoft SQL Server, we're going to shake things up a bit and use &lt;a href="http://www.postgresql.org"&gt;PostgreSQL&lt;/a&gt; for the assignments.  PostgreSQL (or just "Postgres") is an open source database management system that should be able to run on everyone's computer, even those of you with Macs, so we won't have to fool around with virtual machines or cloud servers.  (FYI, I installed the latest release, version 9.3, on my machine.)  On the other hand, this means that the students and I will have to do some learning by trial and error as every database has its little idiosyncrasies.&lt;/p&gt;
&lt;p&gt;I recommend that students look for some free help or documentation on the Internet, because the course text isn't for Postgres specifically.  I found &lt;a href="http://www.syncfusion.com/resources/techportal/ebooks/postgres"&gt;one free book here&lt;/a&gt;, and I'm sure there are more, not to mention the official documentation at postgresql.org(http://www.postgresql.org/docs/9.3/interactive/index.html).&lt;/p&gt;</summary><category term="teaching"></category><category term="cis365"></category></entry></feed>